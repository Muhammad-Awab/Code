@page "/programdegreedetails"
@attribute [Authorize(Roles ="University")]
@inject NavigationManager nm
@using ClassLibraryDAL
@inject AuthenticationStateProvider authStateProvider
@using University.Authentication
@inject IJSRuntime js


@using ClassLibraryEntities
<h3>ProgramDegreeDetail </h3>
<h3>@value1</h3>

<EditForm Model="_ModelProgramDegreeDetail" OnSubmit="SubmintForm">
    <div class="row">
        <div class="col">
            <select class="form-select" aria-label="Default select example" @onchange="_CatOption">
                <option selected>Select Category</option>

                @foreach (var emp in @ProgramCategoriesList)
                {
                    <option value="@emp.ProgramCategoryId">@emp.CategoryName</option>
                }
            </select>


        </div>
        <div class="col">
            <select @bind="@DegreeId" class="form-select" aria-label="Default select example">
                <option selected>Select Category</option>

                @foreach (var emp in @ProgramDegreeList)
                {
                    if (alpha == emp.ProgramCategoryid)
                    {
                        <option value="@emp.ProgramDegreeId">@emp.DegreeName</option>
                    }
                }
            </select>
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</EditForm>

<div class="container pt-4 table-responsive">
<table class="table  table-bordered table-hover">
    <thead class="table-dark">
        <tr scope="row"> 

            <th>Degree</th>
            <th>Duration</th>
            <th>TSem</th>
            <th>Matric</th>
            <th>Fsc</th>
            <th>BS</th>
            <th>TFee</th>
            <th>SFee</th>
            <th>ClosingMerit</th>
            <th>HEC,PEC</th>
            <th>Morning</th>
            <th>Evening</th>
            <th>Weekened</th>
            <th>PDG</th>
            <th>Action</th>
            <th>Edit</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var emp in @ProgramDegreeDetailsList)
        {
            <tr scope="row">

                <td>@emp.ProgramDegreeId</td>
                <td>@emp.Duration</td>
                <td>@emp.TotalSemesters</td>
                <td>@emp.Matric</td>
                <td>@emp.FSC</td>
                <td>@emp.BS</td>
                <td>@emp.TotalFee</td>
                <td>@emp.SemesterFee</td>
                <td>@emp.ClosingMerit</td>
                <td>@emp.ApprovedById</td>
                <td>@emp.Morning</td>
                <td>@emp.Evening</td>
                <td>@emp.Weekened</td>
                <td>@emp.PassingDegreeGroups</td>
                <td>
                    <button @onclick="(e => OnDelete(emp.ProgramDegreeDetailsId))" class="btn btn-danger">Del</button>
                    @*<a href="programdegreedetail/@emp.ProgramDegreeDetailsId" class="btn btn-warning bt-sm">Edit</a>*@
                </td>
                <td>
                    <select class="form-select" aria-label="Default select example" @onchange="_EditOption">
                        <option selected>Edit</option>
                        <option value="duration/@emp.ProgramDegreeDetailsId">Duration</option>
                        <option value="totalsemesters/@emp.ProgramDegreeDetailsId">TotalSemester</option>
                        <option value="eligibility/@emp.ProgramDegreeDetailsId">Eligibility Criteria</option>
                        <option value="feedetails/@emp.ProgramDegreeDetailsId">Fees</option>
                        <option value="shifts/@emp.ProgramDegreeDetailsId">Shift</option>
                        <option value="closingmerit/@emp.ProgramDegreeDetailsId">ClosingMerit</option>
                        <option value="approvedby/@emp.ProgramDegreeDetailsId">AprovedID</option>
                        <option value="passinggroups/@emp.ProgramDegreeDetailsId">ProgramDegreeGroups</option>
                    </select>
                </td>
            </tr>

        }
    </tbody>
</table>
</div>

<h2>@message</h2>
@code {
    private ClassLibraryEntities.EntInstitutes? _Model{ get; set; }
    private List<EntInstitutes>? ProgramUserAccount { get; set; }
    public string message{ get; set; } 
    public string? value1 { get; set; }
    [CascadingParameter]
    private Task <AuthenticationState> authenticatestate { get; set; }
    private async Task DisplayGreeting()
    {
        var authState = await authenticatestate;
        value1 = $"{authState.User.Identity.Name}";

    }
    private List<EntProgramDegreeDetails>? ProgramDegreeDetailsList { get; set; }
    private List<EntProgramCategory>? ProgramCategoriesList;
    private List<EntProgramDegree>? ProgramDegreeList;
    private EntProgramDegreeDetails? _ModelProgramDegreeDetail { get; set; }
    private string? alpha { get; set; }
    private string? DegreeId { get; set; }
    private string? EditOption { get; set; }





    protected async override void OnInitialized()
    {
        DisplayGreeting();
        _ModelProgramDegreeDetail = new EntProgramDegreeDetails();
        LoadProgramDetails();
        LaodProgramDegreeDetails();
        SubmintForm();
    }

    private void OnDelete(string id)
    {

        DALProgramDegreeDetails.DeleteProgramDegreeDetails(id);
        LaodProgramDegreeDetails();

    }

    private async void LaodProgramDegreeDetails()
    {

        if (value1 != null)
        {

            this.ProgramDegreeDetailsList =DALProgramDegreeDetails.GetProgramDegreeDetailsByInstituteId(value1);

        }
   
    }
    private void _CatOption(ChangeEventArgs e)
    {
        alpha = e.Value as string;

    }
    private void _EditOption(ChangeEventArgs e)
    {
        EditOption = e.Value as string;
        Redirect(EditOption);
    }
    private void SubmintForm()
    {
        if (value1 != null)
        {
            _ModelProgramDegreeDetail.InstituteId = value1;
            _ModelProgramDegreeDetail.ProgramDegreeId = DegreeId;
            DALProgramDegreeDetails.SaveProgramDegreeDetails(_ModelProgramDegreeDetail);
            LaodProgramDegreeDetails();
        }



    }
    private void LoadProgramDetails()
    {
        this.ProgramCategoriesList = DALProgramCategory.GetProgramCategory();
        this.ProgramDegreeList = DALProgramDegree.GetProgramDegree();
    }


    private void Redirect(string url)
    { 
        nm.NavigateTo(url);
    }


   
 }