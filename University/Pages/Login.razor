@page "/login"

@using ClassLibraryDAL
@using University.Authentication

@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nm


<h3>login</h3>

<div>
    <input @bind="User" placeholder="userName" />
    <input @bind="Password" placeholder="Password" />
    <button @onclick="Authenticate" class="btn btn-primary">Login</button>
</div>

@code {

    private ClassLibraryEntities.EntInstitutes? _Model { get; set; }

    public string? User { get; set; }
    public string? Password { get; set; }
    public string? ID { get; set; } 


    private async Task Authenticate()
    {
        // var userAccount = userAccountService.GetByUserName(model.UserName);
        _Model = DALUserAcountService.GetUserByName(User);
        _Model.UserName = User;
        ID = _Model.InstituteId;   



       
        if (_Model == null || _Model.Password != Password)
        {
            await js.InvokeVoidAsync("alert", "Invalid userName");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                InstituteId = _Model.InstituteId,
                UserName = _Model.UserName,
                Role = _Model.Role
                
            });

        nm.NavigateTo("/", true);
    }

     public void alpha()
    {
        
        
    }

    
}
