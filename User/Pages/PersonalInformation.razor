@page "/personalinformation"
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@inject IJSRuntime JSRuntime

<div class="card m-3">
    <h4 class="card-header">PersonalInformation</h4>
    <div class="card-body">
        <EditForm EditContext="@editContext" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
            <DataAnnotationsValidator />
            <div class="row">
                
                <div class="form-group col-4">
                    <label>First Name</label>
                    <InputText @bind-Value="model.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => model.FirstName)" />
                </div>
                <div class="form-group col-4">
                    <label>Last Name</label>
                    <InputText @bind-Value="model.LastName" class="form-control" />
                    <ValidationMessage For="@(() => model.LastName)" />
                </div>
                <div class="form-group col-2">
                    <label>Gender</label>
                    <InputSelect @bind-Value="model.Title" class="form-control">
                        <option selected></option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                      
                    </InputSelect>
                    <ValidationMessage For="@(() => model.Title)" />
                </div>
            </div>


            <div class="row">
                
                <div class="form-group col-5">
                    <label>Student CNIC</label>
                    <InputText @bind-Value="model.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => model.FirstName)" />
                </div>
                <div class="form-group col-5">
                    <label>Date of Birth</label>
                    <InputDate @bind-Value="model.DateOfBirth" class="form-control" />
                    <ValidationMessage For="@(() => model.DateOfBirth)" />
                </div>
             
            </div>

             <div class="row">
                
                <div class="form-group col-3">
                    <label>City</label>
                    <InputSelect @bind-Value="model.Title" class="form-control">
                        <option value=""></option>
                        <option value="Faisalabad">Faisalabad</option>
                        <option value="Multan">Multan</option>
                        <option value="Gujranwala">Gujranwala</option>
                        <option value="Hyderabad">Hyderabad</option>
                        <option value="Peshawar">Peshawar</option>
                        <option value="Quetta">Quetta</option>

                      
                    </InputSelect>
                    <ValidationMessage For="@(() => model.Title)" />
                </div>
              <div class="form-group col-2">
                    <label>Province</label>
                    <InputSelect @bind-Value="model.Title" class="form-control">
                        <option value=""></option>
                        <option value="Balochistan">Balochistan</option>
                        <option value="Punjab">Punjab </option>
                        <option value="Sindh">Sindh </option>
                        <option value="Khyber Pakhtunkhwa">Khyber Pakhtunkhwa</option>
                        <option value="Kashmir">Kashmir </option>
                        <option value="Gilgit-Baltistan">Gilgit-Baltistan</option>
                      
                    </InputSelect>
                    <ValidationMessage For="@(() => model.Title)" />
                </div>
             <div class="form-group col-5">
                    <label>Address</label>
                    <InputText type="number" @bind-Value="model.LastName" class="form-control" />
                    <ValidationMessage For="@(() => model.LastName)" />
                </div>
            </div>


            <div class="row">
                
                <div class="form-group col-5">
                    <label>Father Name</label>
                    <InputText @bind-Value="model.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => model.FirstName)" />
                </div>
                <div class="form-group col-5">
                    <label>Father CNIC</label>
                    <InputText @bind-Value="model.LastName" class="form-control" />
                    <ValidationMessage For="@(() => model.LastName)" />
                </div>
            </div>
            
            
            <div class="row">
                
                <div class="form-group col-5">
                    <label>Student Mobile Number</label>
                    <InputText type="number" @bind-Value="model.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => model.FirstName)" />
                </div>
                <div class="form-group col-5">
                    <label>Father Mobile Number</label>
                    <InputText type="number" @bind-Value="model.LastName" class="form-control" />
                    <ValidationMessage For="@(() => model.LastName)" />
                </div>
            </div>
            


            <div class="row">
                   <div class="form-group col-5">
                    <label>Father Income</label>
                    <InputText @bind-Value="model.LastName" class="form-control" />
                    <ValidationMessage For="@(() => model.LastName)" />
                </div>
                <div class="form-group col-5">
                    <label>Email</label>
                    <InputText @bind-Value="model.Email" class="form-control" />
                    <ValidationMessage For="@(() => model.Email)" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-5">
                    <label>Password</label>
                    <InputText @bind-Value="model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <div class="form-group col-5">
                    <label>Confirm Password</label>
                    <InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.ConfirmPassword)" />
                </div>
            </div>
            <div class="form-group form-check">
                <InputCheckbox @bind-Value="model.AcceptTerms" id="acceptTerms" class="form-check-input" />
                <label for="acceptTerms" class="form-check-label">Accept Terms & Conditions</label>
                <ValidationMessage For="@(() => model.AcceptTerms)" />
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Register</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Model model = new Model();
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(model);
    }

    private void HandleValidSubmit()
    {
        var modelJson = JsonSerializer.Serialize(model, new JsonSerializerOptions { WriteIndented = true });
        JSRuntime.InvokeVoidAsync("alert", $"SUCCESS!! :-)\n\n{modelJson}");
    }

    private void HandleReset()
    {
        model = new Model();
        editContext = new EditContext(model);
    }

    private class Model
    {
        [Required]
        public string? Title { get; set; }

        [Required]
        [Display(Name = "First Name")]
        public string? FirstName { get; set; }

        [Required]
        [Display(Name = "Last Name")]
        public string? LastName { get; set; }

        [Required]
        [Display(Name = "Date of Birth")]
        public DateTime? DateOfBirth { get; set; }

        [Required]
        [EmailAddress]
        public string? Email { get; set; }

        [Required]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        public string? Password { get; set; }

        [Required]
       
        [Display(Name = "Confirm Password")]
        public string? ConfirmPassword { get; set; }

        [Required]
        [Range(typeof(bool), "true", "true", ErrorMessage = "Accept Ts & Cs is required")]
        public bool AcceptTerms { get; set; }
    }
}