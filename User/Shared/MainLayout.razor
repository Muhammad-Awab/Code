@using User.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nm


<PageTitle>FrontPage</PageTitle>



    <main>

<nav class="navbar navbar-expand-lg fixed-top shadow navbar-light bg-white text-black">
        <div class="container-fluid ">
          <div class="d-flex align-items-center "><a class="navbar-brand py-1 " href="/"><img  src="Images/Academia.png" style="height:3rem; margin-left:3rem;"   alt="Directory logo"></a>
           
          </div>
          <!-- Navbar Collapse -->
          <div class="collapse navbar-collapse" id="navbarCollapse">
          
            <ul class="navbar-nav ms-auto text-black">
               <AuthorizeView Roles="User">
            <Authorized>
                           
              <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
              <li class="nav-item"><a class="nav-link" href="form">AcademicInfo</a></li>
              <li class="nav-item"><a class="nav-link" href="personalinformation">PersonalInfo</a></li>
              @*<li class="nav-item"><a class="nav-link" href="searchcity">Search City</a></li>*@
               </Authorized>

        </AuthorizeView>
        <AuthorizeView>
                        <Authorized>
                           
                              <a @onclick="logout" href="javascript:void(0)" class="btn btn-outline-success">LogOut</a>
                        </Authorized>
                          <NotAuthorized>
              <a href="login" class="btn btn-primary">Login</a>
              <a href="register" class="btn btn-primary">Register</a>
          </NotAuthorized>
                    </AuthorizeView>
          </ul>
           
          </div>
        </div>
      </nav>
        <article class="content px-4">
            @Body
        </article>
    </main>

@code{

        private async Task logout ()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        nm.NavigateTo("/", true);
    }
}
}
                           