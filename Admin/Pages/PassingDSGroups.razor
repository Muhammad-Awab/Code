@page "/passingdsgroups/{CategoryID}"
@using ClassLibraryDAL
@using ClassLibraryEntities
@inject NavigationManager nm


<div class="container pt-4 table-responsive">
<table class="table  table-bordered table-hover">
    <thead class="table-dark">
    <tr>
        <th>Passing DSGroups ID</th>
        <th>PassingDSGroups</th>
        <th>Passing Degree ID</th>
        <th>Action</th>
    </tr>
     </thead>
    <tbody>
    @foreach (var emp in @PassingDSGroupsList)
    {
        if (CategoryID == emp.PassingDegreeId)
        {
            <tr>
                <td>@emp.PassingDSGroupsId</td>
                <td>@emp.PassingDSGroups</td>
                <td>@emp.PassingDegreeId</td>
                <td>
                    <button @onclick="(e => OnDelete(emp.PassingDSGroupsId))" class="btn btn-danger ">Del</button>
                    <button @onclick="(e=>EditFun(emp.PassingDSGroupsId))" class="btn btn-warning bt-sm">Edit</button>


                </td>

            </tr>
        }
    }

    </tbody>
</table>
</div>
<h2>@title</h2>
<EditForm Model="_ModelPassingDSGroups" OnSubmit="SubmitForm">
    <table>
        <tr>
            <td>
                PassingDSGroupsID
            </td>
            <td>
                <InputText name="ID" @bind-Value="_ModelPassingDSGroups.PassingDSGroupsId" disabled></InputText>
            </td>
        </tr>
        <tr>
            <td>
                PassingDSGroups
            </td>
            <td>
                <InputText name="Name" @bind-Value="_ModelPassingDSGroups.PassingDSGroups" required></InputText>
            </td>
        </tr>
        <tr>
            <td>
                PassingDegreeId
            </td>
            <td>
                <InputText name="Name" @bind-Value="_ModelPassingDSGroups.PassingDegreeId" disabled></InputText>
            </td>
        </tr>
        <tr>

            <td>
                <button type="submit" class="btn btn-primary">@title</button>
            </td>
        </tr>


    </table>


</EditForm>

@code {
    private EntPassingDSGroups? _ModelPassingDSGroups { get; set; }
    private string? title { get; set; }
    private List<EntPassingDSGroups>? PassingDSGroupsList;
    [Parameter] public string? CategoryID { get; set; }
    bool var = true;
    protected override void OnInitialized()
    {
        LaodEmployee();

        if (var == true)
        {
            _ModelPassingDSGroups = new EntPassingDSGroups();
            LaodEmployee();
            title = "CreateNew";

        }
        else
        {
            _ModelPassingDSGroups = DALPassingDSGroups.GetPassingDSGroupsById(CategoryID);
            LaodEmployee();
            title = "Update DS";

        }

    }
    private void EditFun(string id)
    {
        var = false;
        _ModelPassingDSGroups = DALPassingDSGroups.GetPassingDSGroupsById(id);
        title = "Update";
    }
    private void OnDelete(string id)
    {
        DALPassingDSGroups.DeletePassingDSGroups(id);
        LaodEmployee();

    }

    private void LaodEmployee()
    {
        this.PassingDSGroupsList = DALPassingDSGroups.GetPassingDSGroups();
    }

   



    private void SubmitForm()
    {
        if (var == true)
        {
             _ModelPassingDSGroups.PassingDegreeId = CategoryID;
            DALPassingDSGroups.SavePassingDSGroups(_ModelPassingDSGroups);
            
            LaodEmployee();

        }
        else
        {
            DALPassingDSGroups.UpdatePassingDSGroups(_ModelPassingDSGroups);
           
            LaodEmployee();


        }

    }



}
