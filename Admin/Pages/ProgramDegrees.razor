@page "/programdegree/{CategoryID}"
@using ClassLibraryDAL
@using ClassLibraryEntities
@inject NavigationManager nm



<table class="table table-striped">
    <tr>
        <th>ID</th>
        <th>Degree Name</th>
        <th>Category ID</th>
    </tr>
    
    @foreach (var emp in @ProgramDegreeList)
    {  if(CategoryID==emp.ProgramCategoryid){
        <tr>
            <td>
                @emp.ProgramDegreeId
            </td>
            <td>@emp.DegreeName</td>
            <td>@emp.ProgramCategoryid</td>
            <td>

             
                <button @onclick="(e => OnDelete(emp.ProgramDegreeId))" class="btn btn-warning bt-sm">Del</button>
                <button @onclick="(e=>EditFun(emp.ProgramDegreeId))" class="btn btn-warning bt-sm">Edit</button>
                
               
            </td>
        </tr>
    }
    }



</table>
<h2>@title</h2>
<EditForm Model="_ModelProgramDegree" OnSubmit="SubmintForm">
    <table>
        <tr>
            <td>
                DID
            </td>
            <td>
                <InputText name="ID" @bind-Value="_ModelProgramDegree.ProgramDegreeId" disabled></InputText>
            </td>
        </tr>
        <tr>
            <td>
                DegreeName
            </td>
            <td>
                <InputText name="Name" @bind-Value="_ModelProgramDegree.DegreeName"></InputText>
            </td>
        </tr>
       <tr>
            <td>
                PCategoryID
            </td>
            <td>
                <InputText name="Name" @bind-Value="_ModelProgramDegree.ProgramCategoryid"></InputText>
            </td>
        </tr>
         <tr>
            
            <td>
                <button type="submit" class="btn btn-primary">@title</button>
            </td>
        </tr>

       
    </table>


</EditForm>

@code {

    private List<EntProgramDegree>?ProgramDegreeList;
    [Parameter] public string? CategoryID { get; set; }
    bool var = true;
    protected override void OnInitialized()
    {
        LaodProgramDegree();

        if (var==true)
        { 
           
            _ModelProgramDegree = new EntProgramDegree();
            title = "CreateNew";
            
        }
        else
        {
            _ModelProgramDegree = DALProgramDegree.GetProgramDegreeById(CategoryID);
            title = "Update Degree";

        }

    }
    private void  EditFun(string id)
    {
        var = false;
        _ModelProgramDegree = DALProgramDegree.GetProgramDegreeById(id);
            title = "Update";        
    }
    private void OnDelete(string id)
    {
        DALProgramDegree.DeleteProgramDegree(id);
        LaodProgramDegree();

    }

    private void LaodProgramDegree()
    {
        this.ProgramDegreeList = DALProgramDegree.GetProgramDegree();
    }


    private EntProgramDegree? _ModelProgramDegree { get; set; }
    private string? title { get; set; }
    
  
    private void SubmintForm()
    {
        if (var==true)
        {   
            if(_ModelProgramDegree.ProgramCategoryid == CategoryID)
            {
            DALProgramDegree.SaveProgramDegree(_ModelProgramDegree);
            nm.NavigateTo("/programdegree/{CategoryID}");
           // LaodProgramDegree();

           }  
        }
        else
        {   DALProgramDegree.UpdateProgramDegree(_ModelProgramDegree);
            nm.NavigateTo("/programdegree/{CategoryID}"); 
             LaodProgramDegree();
            
            
        }

    }



}
